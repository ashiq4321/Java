/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eventsscheduler;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Time;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ashiqul hoque chowdh
 */
public class ManageEventFrame extends javax.swing.JFrame {

    /**
     * Creates new form AddNewEventFrame
     */
    private Connection con;
    private Statement st;
    private ResultSet rs;
    static int y=0;
    public ManageEventFrame() {
     initComponents();
     EventsInfoTable.setBackground(Color.CYAN);
     populateJTableOnFormLoad();   
     y++;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelEventsName = new javax.swing.JLabel();
        LabelTime = new javax.swing.JLabel();
        TextFieldEventName = new javax.swing.JTextField();
        LabelEventsId = new javax.swing.JLabel();
        LabelDate = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTimeChooser1 = new lu.tudor.santec.jtimechooser.JTimeChooser();
        jLabel1 = new javax.swing.JLabel();
        ButtonSave = new javax.swing.JButton();
        ButtonCancel = new javax.swing.JButton();
        TextfieldDescription = new javax.swing.JTextField();
        TextFieldEventsId = new javax.swing.JTextField();
        UpdateButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        EventsInfoTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        MenuItemId = new javax.swing.JMenuItem();
        MenuItemTime = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        LabelEventsName.setText("Event Name");

        LabelTime.setText("Time");

        TextFieldEventName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldEventNameActionPerformed(evt);
            }
        });

        LabelEventsId.setText("Events Id");

        LabelDate.setText("Date");

        jDateChooser1.setDateFormatString(" yyyy,MM, dd");

        jLabel1.setText("Description");

        ButtonSave.setText("Save");
        ButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveActionPerformed(evt);
            }
        });

        ButtonCancel.setText("Cancel");
        ButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCancelActionPerformed(evt);
            }
        });

        TextfieldDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextfieldDescriptionActionPerformed(evt);
            }
        });

        TextFieldEventsId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldEventsIdActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        EventsInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EventsId", "EventsName", "Date", "Time", "Description"
            }
        ));
        jScrollPane1.setViewportView(EventsInfoTable);

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        MenuItemExit.setText("exit");
        MenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(MenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        MenuItemId.setText("Id");
        MenuItemId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemIdActionPerformed(evt);
            }
        });
        jMenu2.add(MenuItemId);

        MenuItemTime.setText("Time");
        MenuItemTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemTimeActionPerformed(evt);
            }
        });
        jMenu2.add(MenuItemTime);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelEventsId, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelEventsName, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ButtonCancel)
                        .addGap(34, 34, 34)
                        .addComponent(ButtonSave)
                        .addGap(190, 190, 190)
                        .addComponent(UpdateButton)
                        .addGap(28, 28, 28)
                        .addComponent(DeleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(ExitButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextfieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldEventsId, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTimeChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextFieldEventsId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LabelEventsId))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(LabelEventsName)
                                    .addComponent(TextFieldEventName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelTime)
                            .addComponent(jTimeChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(TextfieldDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonCancel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ButtonSave)
                        .addComponent(UpdateButton)
                        .addComponent(DeleteButton)
                        .addComponent(ExitButton)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void MenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemExitActionPerformed
        // TODO add your handling code here:
        //ExitConfirmation
        int confirmation=JOptionPane.showConfirmDialog(null,"Do you really want to exit","Exit",JOptionPane.YES_NO_OPTION);
        if(confirmation==0){
        System.exit(0);
        }
    }//GEN-LAST:event_MenuItemExitActionPerformed

    private void MenuItemIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemIdActionPerformed
        // TODO add your handling code here:
                    JOptionPane.showMessageDialog(rootPane, "Message: "
                + "\n Events Id is the primary key Of your database.It should be different from one event to another");  
    }//GEN-LAST:event_MenuItemIdActionPerformed

    private void TextFieldEventNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldEventNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldEventNameActionPerformed

    private void TextfieldDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextfieldDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextfieldDescriptionActionPerformed

    private void MenuItemTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemTimeActionPerformed
        // TODO add your handling code here:
        
               JOptionPane.showMessageDialog(rootPane, "Format: 23:59:59");
    }//GEN-LAST:event_MenuItemTimeActionPerformed

    private void ButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveActionPerformed
        // TODO add your handling code here:
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String strDate = sdf.format(jDateChooser1.getDate().getTime());
        String time = jTimeChooser1.getFormatedTime();
        String Id =TextFieldEventsId.getText();
        String Name =TextFieldEventName.getText();
        String desc= TextfieldDescription.getText();
        
        
       //Add into table
       DefaultTableModel model = (DefaultTableModel) EventsInfoTable.getModel();
       model.addRow(new Object []{Id,Name,strDate,time,desc});
        
        //Add into database
        ArrayList sInfo = new ArrayList();
        sInfo.add(Id);
        sInfo.add(Name); 
        sInfo.add(strDate);
        sInfo.add(jTimeChooser1.getFormatedTime());
        sInfo.add(TextfieldDescription.getText());       

        DbConnection dbc = new DbConnection();
        dbc.insertIntoDB(sInfo);

    }//GEN-LAST:event_ButtonSaveActionPerformed

    private void TextFieldEventsIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldEventsIdActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TextFieldEventsIdActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
          int i= EventsInfoTable.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel) EventsInfoTable.getModel();
        if(i>=0){
           model.setValueAt(TextFieldEventsId.getText(), i, 0);
           model.setValueAt(TextFieldEventName.getText(), i, 1);        
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           model.setValueAt(sdf.format(jDateChooser1.getDate().getTime()), i, 2);
           model.setValueAt(jTimeChooser1.getFormatedTime(), i, 3);
           model.setValueAt(TextfieldDescription.getText(), i, 4);
           //model.setValueAt(radioChoice,i,3);
        }
        else{
            JOptionPane.showMessageDialog(null, "Error");
        }     

    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        int SelectedRowIndex = 0;
        try{
            SelectedRowIndex = EventsInfoTable.getSelectedRow();
            DbConnection dbc = new DbConnection();
            String S=(String) EventsInfoTable.getValueAt(SelectedRowIndex,0);
            dbc.DeleteFromDb(S);
            DefaultTableModel model = (DefaultTableModel) EventsInfoTable.getModel();
            model.removeRow(SelectedRowIndex);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, " Select a row first ");
        }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        //ExitConfirmation
        int confirmation=JOptionPane.showConfirmDialog(null,"Do you really want to exit","Exit",JOptionPane.YES_NO_OPTION);
        if(confirmation==0){
            System.exit(0);
        }
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void ButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCancelActionPerformed
        // TODO add your handling code here:
      TextFieldEventsId.setText("");
      TextFieldEventName.setText("");
      jDateChooser1.setDate(null);
     // jTimeChooser1.setTime(null);
        TextfieldDescription.setText("");
      
    }//GEN-LAST:event_ButtonCancelActionPerformed
    private void populateJTableOnFormLoad(){
        // TODO add your handling code here:
 
        DefaultTableModel tableModel = (DefaultTableModel) EventsInfoTable.getModel();
        tableModel.setRowCount(0); //start inserting from first row
        tableModel.setColumnCount(5); //set column number
        
        //setting column headers
        EventsInfoTable.getColumnModel().getColumn(0).setHeaderValue("EventsId");
        EventsInfoTable.getColumnModel().getColumn(1).setHeaderValue("EventsName");
        EventsInfoTable.getColumnModel().getColumn(2).setHeaderValue("Date");
        EventsInfoTable.getColumnModel().getColumn(3).setHeaderValue("Time");
        EventsInfoTable.getColumnModel().getColumn(4).setHeaderValue("Description");
        EventsInfoTable.getTableHeader().repaint();
        
        try {
            DbConnection dbc = new DbConnection();
            ResultSet rs = dbc.getResultSet();
               
            while (rs.next()) {
                String id = rs.getString("EventsId");
                String name = rs.getString("EventsName");
                String date = rs.getString("Date");
                String time = rs.getString("Time");
                String desc = rs.getString("Description");
                
                System.out.println("\nEvents Id: " + id + "\n"
                        + "Events Name: " + name + "\n"
                        + "Date: " + date+ "\n"
                        + "time: " + time+"\n"
                        + "description: "+desc);
                tableModel.addRow(new Object[]{id, name,date,time,desc});
            }
        } catch (Exception e) {
            System.out.println("Error: " + e);
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageEventFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageEventFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCancel;
    private javax.swing.JButton ButtonSave;
    private javax.swing.JButton DeleteButton;
    public javax.swing.JTable EventsInfoTable;
    private javax.swing.JButton ExitButton;
    private javax.swing.JLabel LabelDate;
    private javax.swing.JLabel LabelEventsId;
    private javax.swing.JLabel LabelEventsName;
    private javax.swing.JLabel LabelTime;
    private javax.swing.JMenuItem MenuItemExit;
    private javax.swing.JMenuItem MenuItemId;
    private javax.swing.JMenuItem MenuItemTime;
    private javax.swing.JTextField TextFieldEventName;
    private javax.swing.JTextField TextFieldEventsId;
    private javax.swing.JTextField TextfieldDescription;
    private javax.swing.JButton UpdateButton;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private lu.tudor.santec.jtimechooser.JTimeChooser jTimeChooser1;
    // End of variables declaration//GEN-END:variables
}
